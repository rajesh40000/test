@RestResource(urlMapping='/UpdateDistrictapi/')
global class UpdateDistrictapi {
    
    global class Response {     
        global string id;
        global string code;
        global string message;
    }
@HttpPost
    global static void doPost (){
        restrequest req = RestContext.request;
        RequestBodyWrap reqBodywrap = parse(req.requestBody.toString());
        list<District_Master__c> pinList = new list<District_Master__c>();  
        for(cls_Payment lineData: reqBodywrap.line)
        {
            District_Master__c lines = new District_Master__c();
            list<District_Master__c> rec = [select id,Name,District_Name__c, Territory_code__c,Zones__c,State_Code__c,Territory_Name__c from District_Master__c where name =:lineData.Name ];
            if(rec.size()>0){
                for(District_Master__c trr : rec){
                 
                   trr.id= trr.id; 
                   trr.Name = lineData.Name;
                   trr.District_Name__c=lineData.districtName;
                  //  trr.Territory_Name__c=lineData.territoryname;
                    
                    if(lineData.StateCode != null && lineData.StateCode != ''){
                        State__c state=[select id,Name from State__c where Name=:lineData.StateCode];
                        if(state != null){
                            trr.State_Code__c=state.id;
                        }
                    }
                    /*if(lineData.Territorycode != null && lineData.Territorycode != ''){
                Territory_Y__c terr=[select id,Name from Territory_Y__c where Name=:lineData.Territorycode LIMIT 1];
                if(terr != null){
                    trr.Territory_code__c=terr.id;
                }
            }*/
                      if(lineData.ZoneCode != null && lineData.ZoneCode != ''){
                Zone__c zone=[select id,Name from Zone__c where Name=:lineData.ZoneCode];
                if(zone != null){
                    trr.Zones__c=zone.id;
                }
            }
                 
                  
                                   
                    pinList.add(trr);
                system.debug('UpdateLst::::'+pinList);
                }
                
            }
            else
            {
                District_Master__c TerrIns= new District_Master__c();
                   lines.Name =lineData.Name;
                   lines.District_Name__c=lineData.districtName;
                 //lines.Territory_Name__c=lineData.territoryname;
                if(lineData.StateCode != null  && lineData.StateCode != ''){
                State__c state=[select id,Name from State__c where Name=:lineData.StateCode];
                if(state != null){
                    lines.State_Code__c=state.id;
                }
            }
                   /* if(lineData.Territorycode != null  && lineData.Territorycode != ''){
                Territory_Y__c terr=[select id,Name from Territory_Y__c where Name=:lineData.Territorycode];
                if(terr != null){
                    lines.Territory_code__c=terr.id;
                }
            }*/
                      if(lineData.ZoneCode != null && lineData.ZoneCode != ''){
                Zone__c zone=[select id,Name from Zone__c where Name=:lineData.ZoneCode];
                if(zone != null){
                    lines.Zones__c=zone.id;
                }
            }
 
                pinList.add(lines);
                system.debug('UpdateLst::::'+pinList);
            }
        }
        schema.SObjectField schemafield = Pincode__c.Fields.name;
        responseWrap resWrap = new responseWrap();
        list<cls_result> resultParaList = new List<cls_result>();
        system.debug('test='+pinList);
        Database.UpsertResult[] saveResults = Database.upsert(pinList,false);
        for(Integer i=0;i<saveResults.size();i++){
            cls_result resultPara = new cls_result();
            if (saveResults.get(i).isSuccess()){
                resultPara.Status = 'Success';
                resultPara.response_message = 'District Upsert Successfully';
                
                resultPara.SFID = saveResults.get(i).getId();
                
            }else if (!saveResults.get(i).isSuccess()){
                
                Database.Error error = saveResults.get(i).getErrors().get(0);
                resultPara.Status = 'Failure';  
                resultPara.response_message = error.getMessage(); 
                resultPara.SFID = '';  
            }
            resultParaList.add(resultPara);
        }
        resWrap.result = resultParaList;
        RestResponse res = RestContext.response;
        res.statusCode = 200;
        res.responseBody = Blob.valueof(JSON.serialize(resWrap));   
    }
    public class RequestBodyWrap{
        public cls_Payment[] line;
        
    }
    
    public class cls_Payment {
        public String  Name;
       // Public string DistrictCode;
        public string districtName; 
        public string StateCode;
       // public string Territorycode;
        public string  ZoneCode;
       // public string territoryname;
       
    }
    public class responseWrap{
        public cls_result[] result;
    }
    public class cls_result {
        public String Status;
        public String response_message;
        public String SFID;
    }
    public static RequestBodyWrap parse(String json){
        return (RequestBodyWrap) System.JSON.deserialize(json, RequestBodyWrap.class);
        
    }
}