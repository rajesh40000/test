@RestResource(urlMapping='/matching_otp/')
global class matching_otp {
    global class Response {     
        global string message;
    }
    @HttpPost
    global static void doPost(){
        restrequest req = RestContext.request;
        RequestBodyWrap reqBodywrap = parse(req.requestBody.toString());
        responseWrap resWrap = new responseWrap();
        List<cls_result> resultParaList = new List<cls_result>();
        list<Warranty_Registration__c> warRegList = new list<Warranty_Registration__c>();
        cls_result resultPara = new cls_result();
        for(cls_warReg lineData: reqBodywrap.line)
        {
            Warranty_Registration__c lines = new Warranty_Registration__c();
            list<Warranty_Registration__c> rec = [select id,Customer_Mobile__c,OTP__c from Warranty_Registration__c where id =:lineData.teamid and Customer_Mobile__c =:lineData.phoneNo and OTP__c  =:lineData.Otp];
            if(rec.size()>0){
                resultPara.Status = 'Success';
                resultPara.response_message = 'Successfully match found';
                integer rndnum=Math.round(Math.random()*9999);
            	system.debug('Random OTP:::'+rndnum);
                resultParaList.add(resultPara);
        		system.debug('resultParaList----'+resultParaList);
                String message='Dear saksham your otp is '+rndnum+' which isissued by Yokohama India. Thanks. Please do not reply' ;

                SendBulkSMS.send(lineData.phoneNo, message);
                resWrap.result = resultParaList;
        		RestResponse res = RestContext.response;
        		res.statusCode = 200;
        		res.responseBody = Blob.valueof(JSON.serialize(resWrap));
                
                system.debug('successfull');
            } else{
                resultPara.Status = 'Failure';  
                resultPara.response_message = 'failed no match found';
                resultParaList.add(resultPara);
        		system.debug('resultParaList----'+resultParaList);
                resWrap.result = resultParaList;
        		RestResponse res = RestContext.response;
        		res.statusCode = 400;
        		res.responseBody = Blob.valueof(JSON.serialize(resWrap));
                
                system.debug('failed');
            }
        }
    }
    
    public class RequestBodyWrap{
        public cls_warReg[] line;
        
    }
    
    public class cls_warReg {
        public String  teamid;
        Public String phoneNo;
        Public Decimal Otp;
        
       
    }
    public class responseWrap{
        public cls_result[] result;
    }
    public class cls_result {
        public String Status;
        public String response_message;
        
        
    }
    public static RequestBodyWrap parse(String json){
        return (RequestBodyWrap) System.JSON.deserialize(json, RequestBodyWrap.class);
        
    }
}